<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-01-16T23:45:45-06:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">a l e x g i l e s d a n i e l</title><subtitle>Hi, I&apos;m Alex, a technical writer with three years of experience in software, two in architecture, and many more in education and journalism. After some time away, I&apos;m ready to return to my roots in tech. Thanks for visiting, and please enjoy my portfolio samples below.
</subtitle><author><name>Alex Daniel</name></author><entry><title type="html">Streaming Data Between Applications</title><link href="http://localhost:4000/streaming-data-between-applications" rel="alternate" type="text/html" title="Streaming Data Between Applications" /><published>2024-01-16T00:00:00-06:00</published><updated>2024-01-16T00:00:00-06:00</updated><id>http://localhost:4000/streaming-data-between-applications</id><content type="html" xml:base="http://localhost:4000/streaming-data-between-applications">&lt;p&gt;One of my proudest accomplishments at National Instruments was developing a multimodal approach to documentation. Prior to my joining on with NI, the LabVIEW documentation contained screenshots of programming examples, but they were few, and the team didn’t have a standardized format for explaining them in detail. In my documentation, I used numbered callouts to describe the flow of data through LabVIEW applications, as seen in the adapted excerpt below.&lt;/p&gt;

&lt;p&gt;Read the full topic &lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/streaming-data-between-applications.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;streaming-data-between-applications&quot;&gt;Streaming Data between Applications&lt;/h2&gt;

&lt;p&gt;The following figure shows an example of using the Network Streams functions to stream data between two applications on different computers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/NS_streaming data.gif&quot; alt=&quot;Network Streams Programming Example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The following events occur in the previous figure.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The Create Network Stream Writer Endpoint function creates a writer endpoint on Computer 1, and the Create Network Stream Reader Endpoint function creates a reader endpoint on Computer 2.&lt;/li&gt;
  &lt;li&gt;The writer endpoint establishes a connection with the reader endpoint using the endpoint URL of the reader endpoint.&lt;/li&gt;
  &lt;li&gt;Within the Writer Loop, the Write Single Element to Stream function continuously writes the value of the iteration i terminal of the While Loop to the stream.&lt;/li&gt;
  &lt;li&gt;Within the Reader Loop, the Read Single Element from Stream function continuously reads the stream.&lt;/li&gt;
  &lt;li&gt;Data streams continuously until the user clicks the Stop button on Computer 1.&lt;/li&gt;
  &lt;li&gt;The Flush Stream function transfers all remaining data to the reader endpoint.&lt;/li&gt;
  &lt;li&gt;The Destroy Stream Endpoint function destroys the writer endpoint.&lt;/li&gt;
  &lt;li&gt;The reader endpoint receives an error due to disconnection, and data flow exits the While Loop.&lt;/li&gt;
  &lt;li&gt;The Destroy Stream Endpoint function destroys the reader endpoint, which destroys the stream.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr data-content=&quot;footnotes&quot; /&gt;</content><author><name>Alex Daniel</name></author><category term="portfolio sample" /><category term="software" /><category term="programming example" /><summary type="html">One of my proudest accomplishments at National Instruments was developing a multimodal approach to documentation. Prior to my joining on with NI, the LabVIEW documentation contained screenshots of programming examples, but they were few, and the team didn’t have a standardized format for explaining them in detail. In my documentation, I used numbered callouts to describe the flow of data through LabVIEW applications, as seen in the adapted excerpt below.</summary></entry><entry><title type="html">Publishing Latest Values With Shared Variables</title><link href="http://localhost:4000/publishing-latest-values-with-shared-variables" rel="alternate" type="text/html" title="Publishing Latest Values With Shared Variables" /><published>2024-01-16T00:00:00-06:00</published><updated>2024-01-16T00:00:00-06:00</updated><id>http://localhost:4000/publishing-latest-values-with-shared-variables</id><content type="html" xml:base="http://localhost:4000/publishing-latest-values-with-shared-variables">&lt;p&gt;Once upon a time, the documentation for LabVIEW’s shared variable API was a mess. User applications weren’t behaving as intended, on account of misunderstanding of shared variable technology, and the documentation wasn’t helping. Below are excerpts from the content I revised, and further on, you can read some &lt;a href=&quot;#notes-on-the-writing&quot;&gt;notes on the writing&lt;/a&gt; that explain my changes.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;publishing-latest-values-with-shared-variables-&quot;&gt;Publishing Latest Values with Shared Variables &lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/h2&gt;

&lt;p&gt;A shared variable is a memory space that you can read data from and write data to. You can read and write shared variables on a single computer with single-process shared variables or on multiple computers with network-published shared variables, which publish data over a network using the NI Publish-Subscribe Protocol (NI-PSP). Use shared variables to publish only the latest values in a data set to one or more computers.&lt;/p&gt;

&lt;p&gt;In general, you must complete the following tasks to publish latest values with a shared variable:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/creating-shared-variables.html&quot;&gt;Create a shared variable.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/configuring-shared-variables.html&quot;&gt;Configure the shared variable.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/choosing-a-method-of-reading-and-writing-shared-variables.html&quot;&gt;Program your applications to read and write the shared variable.&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/making-shared-variables-available-on-a-network.html&quot;&gt;Make the shared variable available on the network.&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;understanding-shared-variable-technology&quot;&gt;Understanding Shared Variable Technology&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/h2&gt;

&lt;p&gt;Network-published shared variables publish data over a network through a software component called the Shared Variable Engine (SVE). The SVE is installed as a service on your computer when you install LabVIEW, and it manages shared variable updates using a proprietary technology called the NI Publish-Subscribe Protocol (NI-PSP). The term publish-subscribe describes a model of communication where writers, or publishers, do not send data to specific readers, or subscribers. Rather, publishers send updates to a server, in this case the SVE, and subscribers receive those updates from the server.&lt;/p&gt;

&lt;p&gt;The following figure uses Shared Variable nodes to demonstrate how the SVE manages shared variable updates with NI-PSP.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sveengine.gif&quot; alt=&quot;Shared Variable Engine&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The following events occur in the previous figure.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;In Application A, the Random Number (0-1) function writes a random number to the Shared Variable node that corresponds to Variable 1.&lt;/li&gt;
  &lt;li&gt;The Shared Variable node in Application A sends a request to the SVE to update the value of Variable 1.&lt;/li&gt;
  &lt;li&gt;The SVE approves and sends the new value to the Shared Variable nodes that correspond to Variable 1 in Applications B and C.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the previous figure, although Computer 1 hosts a writer of Variable 1 in Application A and a reader of Variable 1 in Application B, Application A cannot write a new value directly to Application B. Instead, Application A must send a request to the SVE on Computer 2 to update every application that subscribes to Variable 1. Therefore, the latency involved in these updates makes shared variables ideal for publishing latest values only. To stream data continuously, use network streams.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;notes-on-the-writing&quot;&gt;Notes on the Writing&lt;/h3&gt;

&lt;p&gt;I made the following key changes to improve this documentation.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Revised topic titles to reflect API functionality.&lt;/strong&gt; Previously, the topic on shared variable data transfer was called “Sharing Live Data Using Shared Variables.” This title implied that shared variables were appropriate for sharing any and all data, but in fact, they were only suited for publishing the latest values in a data set. To appropriately set user expectations, I retitled the topic “Publishing Latest Values with Shared Variables” and made sure to include the last sentence in the first paragraph.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Reorganized the table of contents.&lt;/strong&gt; Initially, shared variable topics had been thrown under a container called “Networking in LabVIEW,” at the same level as topics for other networking protocols. My reorganization has since been reorganized, but I created a parent topic for all networking protocols called &lt;a href=&quot;transferring-data-over-a-network&quot;&gt;Transferring Data over a Network&lt;/a&gt;. Beneath that, &lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/publishing-latest-values-with-shared-variables.html&quot;&gt;Publishing Shared Latest Values with Shared Variables&lt;/a&gt; became a portal for all conceptual and procedural information anyone could need to be successful with shared variables.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Illustrated conceptual and procedural information graphically.&lt;/strong&gt; With a technology so widely misused, words alone weren’t going to cut it. I moved an existing screenshot of an example application to the top of &lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/reading-and-writing-shared-variables-programmatically.html&quot;&gt;Reading and Writing Shared Variables Programmatically&lt;/a&gt; and supplemented it with callouts that described its dataflow. I also created the conceptual graphic in the previous section to describe the behavior and limitations of the shared variable engine.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot;footnotes&quot; /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Read the full topic &lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/publishing-latest-values-with-shared-variables.html&quot;&gt;here&lt;/a&gt;. It’s changed since I wrote it. I intended this topic to be a portal to high-level shared variable tasks, which is why I linked each of the four steps in this topic to essential procedures, but those links have since been removed. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Read the full topic &lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/understanding-shared-variable-technology.html&quot;&gt;here&lt;/a&gt;. &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Alex Daniel</name></author><category term="portfolio sample" /><category term="software" /><category term="procedures" /><category term="revision" /><category term="networking" /><summary type="html">Once upon a time, the documentation for LabVIEW’s shared variable API was a mess. User applications weren’t behaving as intended, on account of misunderstanding of shared variable technology, and the documentation wasn’t helping. Below are excerpts from the content I revised, and further on, you can read some notes on the writing that explain my changes.</summary></entry><entry><title type="html">Transferring Data Between Operating Systems</title><link href="http://localhost:4000/transferring-data-between-operating-systems" rel="alternate" type="text/html" title="Transferring Data Between Operating Systems" /><published>2024-01-16T00:00:00-06:00</published><updated>2024-01-16T00:00:00-06:00</updated><id>http://localhost:4000/transferring-data-between-operating-systems</id><content type="html" xml:base="http://localhost:4000/transferring-data-between-operating-systems">&lt;p&gt;When there’s more than one way to complete the same task, users need to know the pros and cons of each method. I designed the follow table to help users choose between the various options for transferring data between operating systems on their NI Real-Time Hypervisor system. The full manual is &lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/372833c/page/download.html&quot;&gt;still available&lt;/a&gt; but archived on NI’s site.&lt;/p&gt;

&lt;p&gt;To see a similar topic that’s still live, check out &lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/choosing-a-method-of-reading-and-writing-shared-variables.html&quot;&gt;Choosing a Method of Reading and Writing Shared Variables&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/transferring_between_oses.png&quot; alt=&quot;Transferring Data Between Operating Systems&quot; /&gt;&lt;/p&gt;

&lt;hr data-content=&quot;footnotes&quot; /&gt;</content><author><name>Alex Daniel</name></author><category term="portfolio sample" /><category term="software" /><category term="best practices" /><category term="use cases" /><category term="tables" /><summary type="html">When there’s more than one way to complete the same task, users need to know the pros and cons of each method. I designed the follow table to help users choose between the various options for transferring data between operating systems on their NI Real-Time Hypervisor system. The full manual is still available but archived on NI’s site.</summary></entry><entry><title type="html">Transferring Data Over A Network</title><link href="http://localhost:4000/transferring-data-over-a-network" rel="alternate" type="text/html" title="Transferring Data Over A Network" /><published>2024-01-09T00:00:00-06:00</published><updated>2024-01-09T00:00:00-06:00</updated><id>http://localhost:4000/transferring-data-over-a-network</id><content type="html" xml:base="http://localhost:4000/transferring-data-over-a-network">&lt;p&gt;During my three years at National Instruments, I was an advocate for outlining the various use cases of our products. Users had so many options for accomplishing the same tasks, yet each feature had been developed to solve specific problems in the field. When I became the owner of our documentation for networking protocols, I conducted interviews with the engineers who maintained the features, asking them about the situations in which a user would be advised to use one over another.&lt;/p&gt;

&lt;p&gt;The following graphic was the centerpiece of &lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/transferring-data-over-a-network.html&quot;&gt;Transferring Data over a Network&lt;/a&gt;, the topic that resulted from those interviews. Tables and flowcharts, I reasoned, would help users identify themselves among a range of possible use cases and land on the optimal feature for achieving their goals. Within the actual documentation, each of the green bubbles in the flowchart linked to topics on their respective features.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/network_transfer_1.jpg&quot; alt=&quot;Network Transfer Flowchart&quot; /&gt;&lt;/p&gt;

&lt;hr data-content=&quot;footnotes&quot; /&gt;</content><author><name>Alex Daniel</name></author><category term="portfolio sample" /><category term="software" /><category term="best practices documentation" /><summary type="html">During my three years at National Instruments, I was an advocate for outlining the various use cases of our products. Users had so many options for accomplishing the same tasks, yet each feature had been developed to solve specific problems in the field. When I became the owner of our documentation for networking protocols, I conducted interviews with the engineers who maintained the features, asking them about the situations in which a user would be advised to use one over another.</summary></entry><entry><title type="html">Real Time Hypervisor Quick Start Guide</title><link href="http://localhost:4000/real-time-hypervisor-quick-start-guide" rel="alternate" type="text/html" title="Real Time Hypervisor Quick Start Guide" /><published>2024-01-09T00:00:00-06:00</published><updated>2024-01-09T00:00:00-06:00</updated><id>http://localhost:4000/real-time-hypervisor-quick-start-guide</id><content type="html" xml:base="http://localhost:4000/real-time-hypervisor-quick-start-guide">&lt;p&gt;The first product I took charge of documenting at National Instruments was the NI Real-Time Hypervisor, a bare metal embedded system that could simultaneously run and transfer data between multiple operating systems over a virtual Ethernet connection or shared memory.&lt;/p&gt;

&lt;p&gt;One of my first tasks was to write installation instructions for the Linux version of the system. I first installed the components of the system in a chassis, and then I followed developer instructions to set up the Linux version of the system. Those instructions weren’t comprehensive, so as I tested the procedure, I documented every step.&lt;/p&gt;

&lt;p&gt;Excerpts of that work, which appeared in a PDF quick start guide along with the product, appear below. Aside from the clarity of my writing, these samples demonstrate my experience with both Linux and working on the command line.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://download.ni.com/support/manuals/375174c.pdf&quot;&gt;View the full PDF on NI’s website&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/linux_installation_1.png&quot; alt=&quot;NI RT HV Quick Start Excerpt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/linux_installation_2.png&quot; alt=&quot;NI RT HV Quick Start Excerpt&quot; /&gt;&lt;/p&gt;

&lt;hr data-content=&quot;footnotes&quot; /&gt;</content><author><name>Alex Daniel</name></author><category term="portfolio sample" /><category term="software" /><category term="best practices documentation" /><summary type="html">The first product I took charge of documenting at National Instruments was the NI Real-Time Hypervisor, a bare metal embedded system that could simultaneously run and transfer data between multiple operating systems over a virtual Ethernet connection or shared memory.</summary></entry><entry><title type="html">Network Streams Api</title><link href="http://localhost:4000/network-streams-api" rel="alternate" type="text/html" title="Network Streams Api" /><published>2024-01-09T00:00:00-06:00</published><updated>2024-01-09T00:00:00-06:00</updated><id>http://localhost:4000/network-streams-API</id><content type="html" xml:base="http://localhost:4000/network-streams-api">&lt;p&gt;As I wrote in the docs, “a network stream is a lossless, unidirectional, one-to-one communication channel that consists of a writer and a reader endpoint.”&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; The API was designed for network data transfer between applications developed with NI’s graphical programming environment LabVIEW, and the docs I wrote are still available at the links below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/NS_endpoint.gif&quot; alt=&quot;A Network Streams Endpoint&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;links-to-original-docs-with-toc-hierarchy-preserved&quot;&gt;Links to Original Docs, with TOC Hierarchy Preserved&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/streaming-data-and-sending-commands-between-applications.html&quot;&gt;Streaming Data and Sending Commands between Applications&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/designing-applications-using-network-streams.html&quot;&gt;Designing Applications Using Network Streams&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/streaming-data-between-applications.html&quot;&gt;Streaming Data between Applications&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/sending-commands-between-applications.html&quot;&gt;Sending Commands between Applications&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/displaying-information-about-endpoints.html&quot;&gt;Displaying Information about Endpoints&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/network-stream-endpoints.html&quot;&gt;Network Stream Endpoints&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/specifying-network-stream-endpoint-urls.html&quot;&gt;Specifying Network Stream Endpoint URLs&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/organizing-network-stream-endpoint-names.html&quot;&gt;Organizing Network Stream Endpoint Names&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.ni.com/docs/en-US/bundle/labview/page/connecting-network-stream-endpoints-together.html&quot;&gt;Connecting Network Stream Endpoints Together&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;hr data-content=&quot;footnotes&quot; /&gt;

&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Quoted verbatim from the introductory topic for the API. I joined on with NI just when development for this API was beginning, so I wrote the first iteration of the docs, and the content has largely, if not entirely, remained the same. &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;</content><author><name>Alex Daniel</name></author><category term="portfolio sample" /><category term="software documentation" /><category term="api" /><summary type="html">As I wrote in the docs, “a network stream is a lossless, unidirectional, one-to-one communication channel that consists of a writer and a reader endpoint.”1 The API was designed for network data transfer between applications developed with NI’s graphical programming environment LabVIEW, and the docs I wrote are still available at the links below. Quoted verbatim from the introductory topic for the API. I joined on with NI just when development for this API was beginning, so I wrote the first iteration of the docs, and the content has largely, if not entirely, remained the same. &amp;#8617;</summary></entry><entry><title type="html">Soopr</title><link href="http://localhost:4000/soopr" rel="alternate" type="text/html" title="Soopr" /><published>2021-03-04T00:00:00-06:00</published><updated>2021-03-04T00:00:00-06:00</updated><id>http://localhost:4000/soopr</id><content type="html" xml:base="http://localhost:4000/soopr">&lt;p&gt;&lt;a href=&quot;https://www.soopr.co&quot;&gt;Soopr&lt;/a&gt; is the easiest way for you to add share &amp;amp; reaction buttons to your blog and website, integrate an URL shortener and simple to understand analytics service. Soopr lets you manage all of these using a powerful dashboard.&lt;/p&gt;

&lt;p&gt;Moonwalk uses Soopr for share and like buttons and it is already integrated. By default, Moonwalk shows &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;circular&lt;/code&gt; Twitter, Facebook and Copy buttons in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base&lt;/code&gt; size. To add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;like&lt;/code&gt; button, please signup for free on &lt;a href=&quot;https://www.soopr.co&quot;&gt;Soopr&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you have signed up on Soopr, get a publish token for your website and edit &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file and add it under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;soopr&lt;/code&gt; key and restart the server.&lt;/p&gt;
&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;soopr&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;publish-token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ADD_YOUR_PUBLISH_TOKEN_HERE&quot;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://www.soopr.co&quot;&gt;Soopr Website&lt;/a&gt; for more info on how to get the most out of Soopr.&lt;/p&gt;</content><author><name>Alex Daniel</name></author><category term="soopr" /><category term="config" /><summary type="html">Soopr is the easiest way for you to add share &amp;amp; reaction buttons to your blog and website, integrate an URL shortener and simple to understand analytics service. Soopr lets you manage all of these using a powerful dashboard.</summary></entry><entry><title type="html">Code</title><link href="http://localhost:4000/code" rel="alternate" type="text/html" title="Code" /><published>2021-01-08T00:00:00-06:00</published><updated>2021-01-08T00:00:00-06:00</updated><id>http://localhost:4000/code</id><content type="html" xml:base="http://localhost:4000/code">&lt;h1 id=&quot;language-test&quot;&gt;Language Test&lt;/h1&gt;

&lt;h2 id=&quot;python&quot;&gt;Python&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;microrequests&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;mr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;microrequests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# mr is requests&apos; session object and you can use it in similar manner
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://httpbin.org/get&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ruby&quot;&gt;Ruby&lt;/h2&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;gmail&apos;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;time&apos;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;yaml&apos;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;erb&apos;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ARGV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Syntax: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; gmail-username gmail-password&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;YAML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;load_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;__FILE__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/config.yaml&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ERB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;body&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gmail&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Gmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ARGV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ARGV&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# variable &apos;name&apos; is important given it is used in body as well&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email_id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;to&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sending to &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email_id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;compose&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email_id&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;from&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;subject&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;binding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deliver!&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;logout&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;javascript&quot;&gt;Javascript&lt;/h2&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;merge&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;webpack-merge&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;common&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./webpack.common.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;common&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;development&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;devtool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;inline-source-map&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;devServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;writeToDisk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;contentBase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;publicPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__dirname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;compress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;elixir&quot;&gt;Elixir&lt;/h2&gt;
&lt;div class=&quot;language-elixir highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;defmodule&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyAppWeb&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BearerAuth&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;

  &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Plug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Conn&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;alias&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyApp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Account&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_bearer_auth_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unauthorized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;ss&quot;&gt;:error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unauthorized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;auth_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;account&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
          &lt;span class=&quot;no&quot;&gt;Account&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_from_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;auth_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:current_account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;account&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unauthorized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;defp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_bearer_auth_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Bearer &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;auth_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;get_req_header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;authorization&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;auth_token&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:error&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;defp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unauthorized&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;conn&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;401&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Unauthorized&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;|&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;halt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;css&quot;&gt;CSS&lt;/h2&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;.highlight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pre&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;blockquote&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0.5em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;blockquote&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;--bg-secondary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;--border&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;solid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Alex Daniel</name></author><summary type="html">Language Test</summary></entry><entry><title type="html">Post Example With Headings And Toc</title><link href="http://localhost:4000/post-example-with-headings-and-toc" rel="alternate" type="text/html" title="Post Example With Headings And Toc" /><published>2020-07-09T00:00:00-05:00</published><updated>2020-07-09T00:00:00-05:00</updated><id>http://localhost:4000/post-example-with-headings-and-toc</id><content type="html" xml:base="http://localhost:4000/post-example-with-headings-and-toc">&lt;p&gt;Mauris viverra dictum ultricies. Vestibulum quis ipsum euismod, facilisis metus sed, varius ipsum. Donec scelerisque lacus libero, eu dignissim sem venenatis at. Nunc a egestas tortor, sed feugiat leo.&lt;/p&gt;

&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#table-of-contents&quot;&gt;Table of contents&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#the-start&quot;&gt;The start&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#the-middle&quot;&gt;The middle&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#the-end&quot;&gt;The end&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mauris viverra dictum ultricies. Vestibulum quis ipsum euismod, facilisis metus sed, varius ipsum. Donec scelerisque lacus libero, eu dignissim sem venenatis at. Nunc a egestas tortor, sed feugiat leo. Vestibulum porta tincidunt tellus, vitae ornare tortor. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Sed nunc neque, tempor in iaculis non, faucibus et metus. Etiam id nisl ut lorem gravida euismod.&lt;/p&gt;

&lt;h2 id=&quot;the-start&quot;&gt;&lt;a href=&quot;#the-start&quot;&gt;The start&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Fusce non velit cursus ligula mattis convallis vel at metus. Sed pharetra tellus massa, non elementum eros vulputate non. Suspendisse potenti. Quisque arcu felis, laoreet vel accumsan sit amet, fermentum at nunc. Sed massa quam, auctor in eros quis, porttitor tincidunt orci. Nulla convallis id sapien ornare viverra. Cras nec est lacinia ligula porta tincidunt. Nam a est eget ligula pellentesque posuere. Maecenas quis enim ac risus accumsan scelerisque. Aliquam vitae libero sapien. Etiam convallis, metus nec suscipit condimentum, quam massa congue velit, sit amet sollicitudin nisi tortor a lectus. Cras a arcu enim. Suspendisse hendrerit euismod est ac gravida. Donec vitae elit tristique, suscipit eros at, aliquam augue. In ac faucibus dui. Sed tempor lacus tristique elit sagittis, vitae tempor massa convallis.&lt;/p&gt;

&lt;h2 id=&quot;the-middle&quot;&gt;&lt;a href=&quot;#the-middle&quot;&gt;The middle&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Proin quis velit et eros auctor laoreet. Aenean eget nibh odio. Suspendisse mollis enim pretium, fermentum urna vitae, egestas purus. Donec convallis tincidunt purus, scelerisque fermentum eros sagittis vel. Aliquam ac aliquet risus, tempus iaculis est. Fusce molestie mauris non interdum hendrerit. Curabitur ullamcorper, eros vitae interdum volutpat, lacus magna lacinia turpis, at accumsan dui tortor vel lectus. Aenean risus massa, semper non lectus rutrum, facilisis imperdiet mi. Praesent sed quam quis purus auctor ornare et sed augue. Vestibulum non quam quis ligula luctus placerat sed sit amet erat. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Fusce auctor, sem eu volutpat dignissim, turpis nibh malesuada arcu, in consequat elit mauris quis sem. Nam tristique sit amet enim vel accumsan. Sed id nibh commodo, dictum sem id, semper quam.&lt;/p&gt;

&lt;h2 id=&quot;the-end&quot;&gt;The end&lt;/h2&gt;

&lt;p&gt;Donec ex lectus, tempus non lacinia quis, pretium non ipsum. Praesent est nunc, rutrum vel tellus eu, tristique laoreet purus. In rutrum orci sit amet ex ornare, sit amet finibus lacus laoreet. Etiam ac facilisis purus, eget porttitor odio. Suspendisse tempus dolor nec risus sodales posuere. Proin dui dui, mollis a consectetur molestie, lobortis vitae tellus. Vivamus at purus sed urna sollicitudin mattis. Mauris lacinia libero in lobortis pulvinar. Nullam sit amet condimentum justo. Donec orci justo, pharetra ut dolor non, interdum finibus orci. Proin vitae ante a dui sodales commodo ac id elit. Nunc vel accumsan nunc, sit amet congue nunc. Aliquam in lacinia velit. Integer lobortis luctus eros, in fermentum metus aliquet a. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.&lt;/p&gt;</content><author><name>Alex Daniel</name></author><summary type="html">Mauris viverra dictum ultricies. Vestibulum quis ipsum euismod, facilisis metus sed, varius ipsum. Donec scelerisque lacus libero, eu dignissim sem venenatis at. Nunc a egestas tortor, sed feugiat leo.</summary></entry><entry><title type="html">Very Very Very Long Title And Very Very Very Short Content</title><link href="http://localhost:4000/very-very-very-long-title-and-very-very-very-short-content" rel="alternate" type="text/html" title="Very Very Very Long Title And Very Very Very Short Content" /><published>2020-07-08T00:00:00-05:00</published><updated>2020-07-08T00:00:00-05:00</updated><id>http://localhost:4000/very-very-very-long-title-and-very-very-very-short-content</id><content type="html" xml:base="http://localhost:4000/very-very-very-long-title-and-very-very-very-short-content">&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque vel lacinia neque. Praesent nulla quam, ullamcorper in sollicitudin ac, molestie sed justo. Cras aliquam, sapien id consectetur accumsan, augue magna faucibus ex, ut ultricies turpis tortor vel ante. In at rutrum tellus. Nullam vestibulum metus eu purus malesuada, volutpat mattis leo facilisis.&lt;/p&gt;</content><author><name>Alex Daniel</name></author><summary type="html">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque vel lacinia neque. Praesent nulla quam, ullamcorper in sollicitudin ac, molestie sed justo. Cras aliquam, sapien id consectetur accumsan, augue magna faucibus ex, ut ultricies turpis tortor vel ante. In at rutrum tellus. Nullam vestibulum metus eu purus malesuada, volutpat mattis leo facilisis.</summary></entry></feed>